{"version":3,"sources":["./src/app/pages/contacts/contacts.module.ts","./src/app/pages/contacts/contacts.page.scss","./src/app/pages/contacts/contacts.page.ts","./src/app/pages/contacts/contacts-routing.module.ts","./src/app/pages/contacts/contacts.page.html"],"names":[],"mappings":"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","file":"pages-contacts-contacts-module-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { IonicModule } from '@ionic/angular';\r\nimport { ContactsPageRoutingModule } from './contacts-routing.module';\r\nimport { ContactsPage } from './contacts.page';\r\n\r\n// 22.1) Importando dependências\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    ContactsPageRoutingModule,\r\n\r\n    // 22.2) Importando dependências\r\n    ReactiveFormsModule,\r\n  ],\r\n  declarations: [ContactsPage]\r\n})\r\nexport class ContactsPageModule {}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2NvbnRhY3RzL2NvbnRhY3RzLnBhZ2Uuc2NzcyJ9 */\";","import { Component, OnInit } from '@angular/core';\r\n\r\n// 22.1) Importa dependências\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { StorageMap } from '@ngx-pwa/local-storage';\r\nimport { DatePipe } from '@angular/common';\r\nimport { AngularFirestore } from '@angular/fire/firestore';\r\nimport { AlertController } from '@ionic/angular';\r\n\r\n@Component({\r\n  selector: 'app-contacts',\r\n  templateUrl: './contacts.page.html',\r\n  styleUrls: ['./contacts.page.scss'],\r\n})\r\nexport class ContactsPage implements OnInit {\r\n\r\n  // 22.3) Atributos\r\n  contactForm: FormGroup;\r\n  userProfile: any;\r\n  pipe = new DatePipe('en_US');\r\n\r\n  constructor(\r\n\r\n    // 22.2) Injeta dependências\r\n    public form: FormBuilder,\r\n    public storage: StorageMap,\r\n    public fbStore: AngularFirestore,\r\n    public alert: AlertController\r\n  ) { }\r\n\r\n  // 22.4) Inclua 'void' no 'OnInit'\r\n  ngOnInit(): void {\r\n\r\n    // 22.5) Obtém dados do perfil. Se existir, preenche formulário automaticamente.\r\n    this.storage.get('userProfile', { type: 'string' }).subscribe(\r\n      (pData) => {\r\n        if (pData) {\r\n          this.userProfile = JSON.parse(pData);\r\n          this.contactForm.controls.uid.setValue(this.userProfile.uid);\r\n          this.contactForm.controls.name.setValue(this.userProfile.name);\r\n          this.contactForm.controls.email.setValue(this.userProfile.email);\r\n        }\r\n      }\r\n    );\r\n\r\n    // 22.6) Cria formulário reativo\r\n    this.contactFormCreate();\r\n  }\r\n\r\n  // 22.7) Cria formulário reativo\r\n  contactFormCreate() {\r\n    this.contactForm = this.form.group({\r\n      date: [''],\r\n      uid: [''],\r\n      name: [\r\n        '',\r\n        Validators.compose([\r\n          Validators.required,\r\n          Validators.minLength(3)\r\n        ])\r\n      ],\r\n      email: [\r\n        '',\r\n        Validators.compose([\r\n          Validators.required,\r\n          Validators.email\r\n        ])\r\n      ],\r\n      subject: [\r\n        '',\r\n        Validators.compose([\r\n          Validators.required,\r\n          Validators.minLength(5)\r\n        ])\r\n      ],\r\n      message: [\r\n        '',\r\n        Validators.compose([\r\n          Validators.required,\r\n          Validators.minLength(5)\r\n        ])\r\n      ]\r\n    });\r\n  }\r\n\r\n  // 22.8) Processa envio do contato\r\n  contactSend() {\r\n\r\n    // Formata documento\r\n    this.contactForm.controls.date.setValue(this.pipe.transform(Date.now(), 'yyyy-MM-dd hh:mm:ss').trim());\r\n\r\n    // Salva documento no Firestore\r\n    this.fbStore.collection('contacts').add(this.contactForm.value).then(() => {\r\n\r\n      // Exibe feedback\r\n      this.contactConfirm();\r\n\r\n      // Em caso de erro, gera log\r\n    }).catch((error) => { console.error(error); });\r\n  }\r\n\r\n  // 22.9) Exibe feedback\r\n  async contactConfirm() {\r\n    const alert = await this.alert.create({\r\n      cssClass: 'my-custom-class',\r\n      header: 'Contato Enviado',\r\n      message: 'Seu contato foi enviado com sucesso!<br><br>Obrigado...',\r\n      buttons: [{\r\n        text: 'Ok',\r\n        handler: () => {\r\n\r\n          // Reinicia formulário\r\n          this.contactForm.reset({\r\n            uid: this.contactForm.value.uid.trim(),\r\n            name: this.contactForm.value.name.trim(),\r\n            email: this.contactForm.value.email.trim(),\r\n            subject: '',\r\n            message: ''\r\n          });\r\n        }\r\n      }]\r\n    });\r\n    await alert.present();\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { ContactsPage } from './contacts.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: ContactsPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class ContactsPageRoutingModule {}\r\n","export default \"<ion-header>\\r\\n  <ion-toolbar>\\r\\n\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <ion-menu-button></ion-menu-button>\\r\\n    </ion-buttons>\\r\\n\\r\\n    <ion-title>Faça Contato</ion-title>\\r\\n\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content>\\r\\n\\r\\n  <div class=\\\"ion-padding\\\">\\r\\n\\r\\n    <p class=\\\"ion-no-margin\\\">Preencha o formulário abaixo para entrar em contato com a equipe do aplicativo.</p>\\r\\n\\r\\n    <p class=\\\"ion-text-center\\\"><small>\\r\\n        <ion-text color=\\\"danger\\\">Preencha todos os campos.</ion-text>\\r\\n      </small></p>\\r\\n\\r\\n    <form [formGroup]=\\\"contactForm\\\" (ngSubmit)=\\\"contactSend()\\\">\\r\\n      <ion-input type=\\\"hidden\\\" id=\\\"uid\\\" name=\\\"uid\\\" formControlName=\\\"uid\\\"></ion-input>\\r\\n\\r\\n      <ion-list lines=\\\"full\\\" class=\\\"ion-no-padding\\\">\\r\\n\\r\\n        <ion-item>\\r\\n          <ion-label for=\\\"name\\\" position=\\\"floating\\\" color=\\\"primary\\\">\\r\\n            Seu nome:\\r\\n            <ion-text color=\\\"danger\\\" *ngIf=\\\"contactForm.controls.name.errors\\\">\\r\\n              <small *ngIf=\\\"contactForm.controls.name.errors.required\\\">* Obrigatório</small>\\r\\n              <small *ngIf=\\\"contactForm.controls.name.errors.minlength\\\">* Inválido</small>\\r\\n            </ion-text>\\r\\n          </ion-label>\\r\\n          <ion-input type=\\\"text\\\" id=\\\"name\\\" name=\\\"name\\\" formControlName=\\\"name\\\" placeholder=\\\"Seu nome completo\\\">\\r\\n          </ion-input>\\r\\n        </ion-item>\\r\\n\\r\\n        <ion-item>\\r\\n          <ion-label for=\\\"email\\\" position=\\\"floating\\\" color=\\\"primary\\\">\\r\\n            E-mail:\\r\\n            <ion-text color=\\\"danger\\\" *ngIf=\\\"contactForm.controls.email.errors\\\">\\r\\n              <small *ngIf=\\\"contactForm.controls.email.errors.required\\\">* Obrigatório</small>\\r\\n              <small *ngIf=\\\"contactForm.controls.email.errors.email\\\">* Inválido</small>\\r\\n            </ion-text>\\r\\n          </ion-label>\\r\\n          <ion-input type=\\\"text\\\" id=\\\"email\\\" name=\\\"email\\\" formControlName=\\\"email\\\" placeholder=\\\"Seu e-mail principal\\\">\\r\\n          </ion-input>\\r\\n        </ion-item>\\r\\n\\r\\n        <ion-item>\\r\\n          <ion-label for=\\\"subject\\\" position=\\\"floating\\\" color=\\\"primary\\\">\\r\\n            Assunto:\\r\\n            <ion-text color=\\\"danger\\\" *ngIf=\\\"contactForm.controls.subject.errors\\\">\\r\\n              <small *ngIf=\\\"contactForm.controls.subject.errors.required\\\">* Obrigatório</small>\\r\\n              <small *ngIf=\\\"contactForm.controls.subject.errors.minlength\\\">* Inválido</small>\\r\\n            </ion-text>\\r\\n          </ion-label>\\r\\n          <ion-input type=\\\"text\\\" id=\\\"subject\\\" name=\\\"subject\\\" formControlName=\\\"subject\\\" placeholder=\\\"Assunto do contato\\\">\\r\\n          </ion-input>\\r\\n        </ion-item>\\r\\n\\r\\n        <ion-item>\\r\\n          <ion-label for=\\\"message\\\" position=\\\"floating\\\" color=\\\"primary\\\">\\r\\n            Mensagem:\\r\\n            <ion-text color=\\\"danger\\\" *ngIf=\\\"contactForm.controls.message.errors\\\">\\r\\n              <small *ngIf=\\\"contactForm.controls.message.errors.required\\\">* Obrigatório</small>\\r\\n              <small *ngIf=\\\"contactForm.controls.message.errors.minlength\\\">* Inválido</small>\\r\\n            </ion-text>\\r\\n          </ion-label>\\r\\n          <ion-textarea rows=\\\"1\\\" type=\\\"text\\\" id=\\\"message\\\" name=\\\"message\\\" formControlName=\\\"message\\\"\\r\\n            placeholder=\\\"Texto do contato\\\" autoGrow=\\\"true\\\"></ion-textarea>\\r\\n        </ion-item>\\r\\n\\r\\n      </ion-list>\\r\\n\\r\\n      <ion-button type=\\\"submit\\\" expand=\\\"block\\\" class=\\\"ion-margin-vertical\\\" [disabled]=\\\"contactForm.invalid\\\">\\r\\n        Enviar\\r\\n      </ion-button>\\r\\n\\r\\n    </form>\\r\\n\\r\\n  </div>\\r\\n\\r\\n</ion-content>\";"],"sourceRoot":"webpack:///"}